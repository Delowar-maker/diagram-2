// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  fristName    String   @db.VarChar(50)
  middleName   String   @db.VarChar(50)
  lastName     String   @db.VarChar(50)
  mobile       String   @db.VarChar(50)
  registeredAt DateTime @default(now()) @db.Timestamp(0)
  lastLogin    DateTime @default(now()) @db.Timestamp(0)
  intro        String   @db.VarChar(10)
  profile      String   @db.VarChar(10)
  
}

model post {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  authorId    BigInt   @db.UnsignedBigInt
  parentId    BigInt   @db.UnsignedBigInt
  title       String   @db.VarChar(50)
  metaTitle   String   @db.VarChar(50)
  slug        String   @db.VarChar(50)
  summary     String   @db.VarChar(5)
  published   String   @db.VarChar(1)
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  updatedAt   DateTime @default(now()) @db.Timestamp(0)
  publishedAt DateTime @default(now()) @db.Timestamp(0)
  content     String   @db.Text
  post_comment post_comment[]
  post_tag post_tag[]
  post_meta post_meta[]
  post_category post_category[]
}

model post_comment {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  postId      BigInt   @db.UnsignedBigInt
  parentId    BigInt   @db.UnsignedBigInt
  title       String   @db.VarChar(50)
  published   String   @db.VarChar(1)
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  publishedAt DateTime @default(now()) @db.Timestamp(0)
  content     String   @db.Text
  post post   @relation(fields: [parentId], references: [id], onDelete: Restrict, onUpdate:Cascade)
}

model tag {
  id        BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  title     String @db.VarChar(50)
  metaTitle String @db.VarChar(50)
  slug      String @db.VarChar(50)
  content   String @db.Text
  post_tag post_tag[]
}

model post_tag {
  postId BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  tagId  BigInt @db.UnsignedBigInt
  post post @relation(fields: [postId], references: [id], onDelete: Restrict, onUpdate:Cascade)
  tag tag @relation(fields: [tagId], references: [id], onDelete: Restrict, onUpdate:Cascade)
}

model post_meta {
  id      BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  postId  BigInt @db.UnsignedBigInt
  key     String @db.VarChar(50)
  content String @db.Text
  post post @relation(fields: [postId], references: [id], onDelete: Restrict, onUpdate:Cascade)
}

model post_category {
  postId     BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  categoryId BigInt @db.UnsignedBigInt
  post post @relation(fields: [postId], references: [id], onDelete: Restrict, onUpdate:Cascade)
  category category @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate:Cascade)
}

model category {
  id        BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  parentId  BigInt @db.UnsignedBigInt
  title     String @db.VarChar(75)
  metaTitle String @db.VarChar(75)
  slug      String @db.VarChar(100)
  content   String @db.Text
  post_category post_category[]
}
